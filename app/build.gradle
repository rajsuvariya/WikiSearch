apply plugin: 'com.android.application'
//apply from: '../config/quality/quality.gradle'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "io.rajsuvariya.wikisearch"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }

    flavorDimensions "mode"
    productFlavors {
        uat {
            it.buildConfigField 'String', 'BASE_URL', '\"https://en.wikipedia.org//w/api.php/\"'
//            it.buildConfigField 'String', 'PASSWORD', passwordUat
            dimension "mode"
        }
        prod {
            it.buildConfigField 'String', 'BASE_URL', '\"https://en.wikipedia.org//w/api.php/\"'
//            it.buildConfigField 'String', 'PASSWORD', passwordProd
            dimension "mode"
        }
    }

    buildTypes {
        debug {

        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }
    }
    splits {

        // Configures multiple APKs based on ABI.
        abi {

            // Enables building multiple APKs per ABI.
            enable true

            // By default all ABIs are included, so use reset() and include to specify that we only
            // want APKs for x86, armeabi-v7a, and mips.

            // Resets the list of ABIs that Gradle should create APKs for to none.
            reset()

            // Specifies a list of ABIs that Gradle should create APKs for.
            include "x86", "armeabi-v7a", "mips"

            // Specifies that we do not want to also generate a universal APK that includes all ABIs.
            universalApk false
        }
    }
}

dependencies {

    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    compile fileTree(dir: 'libs', include: ['*.jar'])

    // android support libraries
    compile "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:design:$rootProject.supportLibraryVersion"
    compile "com.android.support:support-vector-drawable:$rootProject.supportLibraryVersion"
    compile "com.android.support:animated-vector-drawable:$rootProject.supportLibraryVersion"
    compile "com.android.support.constraint:constraint-layout:$rootProject.constraintVersion"

    // network
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation "com.squareup.retrofit2:adapter-rxjava2:2.4.0"
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.0'
    compile "com.google.code.gson:gson:$rootProject.gsonVersion"

    // dependency injection
    compile "com.google.dagger:dagger:$rootProject.dagger2Version"
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.dagger2Version"

    // RxJava
    compile "io.reactivex.rxjava2:rxjava:$rootProject.rxjava2Version"
    compile "io.reactivex.rxjava2:rxandroid:$rootProject.rxandroidVersion"
    compile "javax.inject:javax.inject:$rootProject.javaxInject"
    provided "javax.annotation:jsr250-api:$rootProject.javaxAnnotation"

    // code generator for view
    compile "com.jakewharton:butterknife:$rootProject.butterKnifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.butterKnifeVersion"

    // logger
    compile "com.jakewharton.timber:timber:$rootProject.timberVersion"

    //Glide
    compile "com.github.bumptech.glide:glide:$rootProject.glideVersion"
    compile "com.android.support:support-v4:$rootProject.v4Support"

    // dependencies for local unit tests
    testCompile "junit:junit:$rootProject.ext.junitVersion"
    testCompile "org.mockito:mockito-core:$rootProject.mockitoVersion"
    testAnnotationProcessor "com.google.dagger:dagger-compiler:$rootProject.dagger2Version"

    // Architecture Component
    implementation "android.arch.persistence.room:runtime:1.1.1"
    annotationProcessor "android.arch.persistence.room:compiler:1.1.1"
    implementation "android.arch.persistence.room:rxjava2:1.1.1"

    // UI Testing
    androidTestCompile "com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion", {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestCompile "com.android.support.test.espresso:espresso-intents:$rootProject.espressoVersion", {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestCompile "org.mockito:mockito-core:$rootProject.mockitoVersion"
    androidTestAnnotationProcessor "com.google.dagger:dagger-compiler:$rootProject.dagger2Version"

    // Database Debugging
    debugImplementation 'com.amitshekhar.android:debug-db:1.0.4'

    // Custom Tab
    implementation 'com.android.support:customtabs:27.1.1'
    implementation 'saschpe.android:customtabs:1.1.1'
}
repositories {
    mavenCentral()
}
